name: Produksjon

on:
  release:
    types: [released]

env:
  IMAGE: ghcr.io/${{ github.repository }}/fritakagp:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: gradle

      - name: Cache Gradle wrapper
        uses: actions/cache@v4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-

      - name: compose up
        run: cd docker/local && docker compose up -d && sleep 15

      - name: Build and test
        run: bash ./gradlew --console=plain build test jar
        env:
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish Docker image
        run: |
          docker build --tag ${IMAGE} .
          docker push ${IMAGE}

  deploy-to-prod:
    name: Deploy to prod-gcp
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: deploy/nais.yml
          VAR: image=${{ env.IMAGE }}
          VARS: deploy/prod.yml
