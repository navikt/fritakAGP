name: Bygg og deploy

on:
  push:
    branches:
      - main

env:
  APP: fritakagp
  DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository }}
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-
      - name: compose up
        run: cd docker/local && docker-compose up -d && sleep 15
      - name: test and build
        run: bash ./gradlew --console=plain build test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_PUSH_USERNAME }}
          password: ${{ secrets.GHCR_PUSH_TOKEN }}
      - name: Build and publish Docker image
        run: |
          docker build --tag ${IMAGE} .
          docker push ${IMAGE}




  deploy-to-dev:
    name: Deploy to dev-gcp
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@master
      - uses: nais/deploy/actions/deploy@master
        env:
          TEAM: helsearbeidsgiver
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/dev.yaml
          REF: ${{ env.COMMIT }}
          IMAGE: ${{ env.IMAGE }}

  deploy-krav-topic-to-dev:
    name: Deploy krav-topic to dev
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@master
      - uses: nais/deploy/actions/deploy@master
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/krav-topic.yaml

  deploy-soeknad-topic-to-dev:
    name: Deploy s√∏knad-topic to dev
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@master
      - uses: nais/deploy/actions/deploy@master
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/soeknad-topic.yaml

  #deploy:
  #  name: Deploy to PREPROD og PROD
  #  needs: build
  #  if: github.ref == 'refs/heads/master'
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v1
  #    - uses: nais/deploy/actions/deploy@v1
  #      env:
  #        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
  #        CLUSTER: dev-fss
  #        RESOURCE: deploy/dev.yaml
  #    - uses: nais/deploy/actions/deploy@v1
  #      env:
  #        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
  #        CLUSTER: prod-fss
  #        RESOURCE: deploy/prod.yaml
