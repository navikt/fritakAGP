// Default-verdier ment for kjøring lokalt på uviklingsmaskin er angitt først, med påfølgende mulighet for override via
// environment variabler, der env variabelnavnet er angitt inni ${ENV_NAVN}

koin {
  profile: "LOCAL"
  profile: ${?KOIN_PROFILE}
}

ktor {
  application {
    id = "fritakagp"
    id = ${?KTOR_APPLICATION_ID}
  }
}

service_user {
  username: "srvfritakagp"
  username: ${?SERVICE_USER_USERNAME}
  password: "dummy"
  password: ${?SERVICE_USER_PASSWORD}
}

oppgavebehandling {
  url: "https://oppgave.dev.adeo.no/api/v1/oppgaver"
  url: ${?OPPGAVEBEHANDLING_URL}
}

sts_url_rest: "https://security-token-service.dev.adeo.no/rest/v1/sts/token"
sts_url_rest: ${?SECURITYTOKENSERVICE_URL_REST}

pdl_url: "https://pdl-api.nais.preprod.local/graphql"
pdl_url: ${?PDL_URL}


dokarkiv {
  base_url: "https://dokarkiv-q0.dev.adeo.no"
  base_url: ${?DOKARKIV_URL}
}

database {
  username = "fritakagp"
  username = ${?NAIS_DATABASE_FRITAKAGP_FRITAKAGP_DB_USERNAME}

  password = "fritakagp"
  password = ${?NAIS_DATABASE_FRITAKAGP_FRITAKAGP_DB_PASSWORD}

  name = "fritakagp_db"
  name = ${?NAIS_DATABASE_FRITAKAGP_FRITAKAGP_DB_DATABASE}

  host = "localhost"
  host = ${?NAIS_DATABASE_FRITAKAGP_FRITAKAGP_DB_HOST}

  port = 5432
  port = ${?NAIS_DATABASE_FRITAKAGP_FRITAKAGP_DB_PORT}
}


no.nav.security.jwt {
  issuers = [
    {
      issuer_name = loginservice-issuer
      discoveryurl = "http://localhost:6666/loginservice-issuer/.well-known/openid-configuration"
      discoveryurl = ${?LOGINSERVICE_IDPORTEN_DISCOVERY_URL}
      accepted_audience = aud-localhost
      accepted_audience = ${?LOGINSERVICE_IDPORTEN_AUDIENCE}
      cookie_name = selvbetjening-idtoken
    }
  ]

  client {
    registration {
      clients = [
        {
          client_name: "azure_ad"
          well_known_url: "https://tokendings.dev-gcp.nais.io/token"
          well_known_url: ${?AZURE_APP_WELL_KNOWN_URL}
          grant_type: client_credentials
          authentication: {
            client_id: client-id-set-by-nais-runtime
            client_id: ${?AZURE_APP_CLIENT_ID}
            client_secret: "secret-injected-by-nais"
            client_secret: ${?AZURE_APP_CLIENT_SECRET}
            client_auth_method: client_secret_post
          }
        }
      ]
    }
  }
}
